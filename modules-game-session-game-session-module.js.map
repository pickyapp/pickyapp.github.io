{"version":3,"sources":["webpack:///./src/app/modules/game-session/components/game-session/game-session.component.html","webpack:///./src/app/modules/game-session/components/game-session/game-session.component.scss","webpack:///./src/app/modules/game-session/components/game-session/game-session.component.ts","webpack:///./src/app/modules/game-session/components/in-game/in-game.component.html","webpack:///./src/app/modules/game-session/components/in-game/in-game.component.scss","webpack:///./src/app/modules/game-session/components/in-game/in-game.component.ts","webpack:///./src/app/modules/game-session/components/in-progress/in-progress.component.html","webpack:///./src/app/modules/game-session/components/in-progress/in-progress.component.scss","webpack:///./src/app/modules/game-session/components/in-progress/in-progress.component.ts","webpack:///./src/app/modules/game-session/game-session-routing.module.ts","webpack:///./src/app/modules/game-session/game-session.module.ts","webpack:///./src/app/modules/game-session/services/user.service.ts","webpack:///./src/app/modules/game-session/services/utility.service.ts"],"names":[],"mappings":"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","file":"modules-game-session-game-session-module.js","sourcesContent":["module.exports = \"<div *ngIf=\\\"!isGameView\\\">\\n  <section class=\\\"w-70 center pt6 pb2\\\">\\n    <textfield class=\\\"w-100\\\"\\n      [(textValue)]=\\\"usernameStr\\\"\\n      [textSize]=\\\"'f3'\\\"\\n      [isDisabled]=\\\"isAddUserDisabled\\\"\\n      [placeholderText]=\\\"'your name'\\\"></textfield>\\n  \\n  <div class=\\\"mv4\\\">\\n    <click-button\\n    [text]=\\\"addButtonText\\\"\\n    (click)=\\\"setUsername(usernameStr)\\\"\\n    [isDisabled]=\\\"isAddUserDisabled\\\"></click-button>\\n  </div>\\n  </section>\\n  <section class=\\\"mv4\\\">\\n    <div class=\\\"mb3 white f2 tc\\\" *ngFor=\\\"let user of (this.sCurrGameSession$ | async)?.users\\\">\\n      {{ user }}\\n    </div>\\n  </section>\\n  <h5>{{ this.countdownTimerTimeLeft <= 0.5 ? \\\"GO!\\\" : this.countdownTimerTimeLeft.toFixed(1) }}</h5>\\n</div>\\n<div  *ngIf=\\\"isGameView\\\">\\n  <in-game></in-game>\\n</div>\\n\"","module.exports = \"/* You can add global styles to this file, and also import other style files */\\nbody {\\n  font-family: 'Roboto', sans-serif; }\\n:host {\\n  background-color: #009688;\\n  display: inline-block;\\n  width: 100%;\\n  height: 72rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3Zpbml0L3NpZGUvcGlja3ktbXZwMS9zcmMvc3R5bGVzLnNjc3MiLCIvaG9tZS92aW5pdC9zaWRlL3BpY2t5LW12cDEvc3JjL2FwcC9tb2R1bGVzL2dhbWUtc2Vzc2lvbi9jb21wb25lbnRzL2dhbWUtc2Vzc2lvbi9nYW1lLXNlc3Npb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0VBQStFO0FBUy9FO0VBQ0Usa0NBQWlDLEVBQ2xDO0FDVEQ7RUFDRSwwQkRDb0I7RUNBcEIsc0JBQXFCO0VBQ3JCLFlBQVc7RUFDWCxjQUFhLEVBQ2QiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2dhbWUtc2Vzc2lvbi9jb21wb25lbnRzL2dhbWUtc2Vzc2lvbi9nYW1lLXNlc3Npb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBZb3UgY2FuIGFkZCBnbG9iYWwgc3R5bGVzIHRvIHRoaXMgZmlsZSwgYW5kIGFsc28gaW1wb3J0IG90aGVyIHN0eWxlIGZpbGVzICovXG5cblxuJGNvbG9yV2hpdGU6ICNmZmY7XG4kcHJpbWFyeUNvbG9yOiAjMDA5Njg4O1xuJHByaW1hcnlMaWdodENvbG9yOiAjNTJjN2I4O1xuJHByaW1hcnlEYXJrQ29sb3I6ICMwMDY3NWI7XG5cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbn1cbiIsIkBpbXBvcnQgJy4uLy4uLy4uLy4uLy4uL3N0eWxlcy5zY3NzJztcblxuOmhvc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeUNvbG9yO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDcycmVtO1xufVxuIl19 */\"","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { interval, of, Subject, Subscription, timer } from \"rxjs\";\nimport { shareReplay, switchMap, tap, take, filter } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { CookieService } from \"ngx-cookie-service\";\nimport { UserService } from \"../../services/user.service\";\nimport { GameSessionService } from \"src/app/services/game-session.service\";\n\n@Component({\n  selector: \"game-session\",\n  templateUrl: \"game-session.component.html\",\n  styleUrls: [ \"game-session.component.scss\" ]\n})\n\nexport class GameSessionComponent implements OnDestroy, OnInit {\n\n  private addButtonText: string = \"JOIN\";\n  private gameSessionName: string;\n  private isGameView: boolean;\n\n  private routeSubscription: Subscription;\n  private pollSubscription: Subscription;\n  \n  // 's' prepended vars are vars related to the current cookie session\n  private sCurrUser$: Subject<object>;\n  private sCurrGameSession$: Subject<object>;\n  private sCurrUser;\n  private sCurrGameSession;\n\n  private countdownStarted: boolean;\n  private countdownTimerTimeLeft: number;\n\n  private isAddUserDisabled: boolean;\n\n  ngOnInit() {\n    this.isGameView = false;\n    this.countdownTimerTimeLeft = 0.0;\n  }\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private cookieService: CookieService,\n    private userService: UserService,\n    private gsService: GameSessionService\n  ) {\n    this.sCurrUser$ = new Subject<object>();\n    this.sCurrGameSession$ = new Subject<object>();\n    this.countdownStarted = false;\n    this.isAddUserDisabled = false;\n\n    this.routeSubscription = this.route.params.pipe(\n      take(1), // need to run only once\n      switchMap((params) => this.gsService.makeSession(params[\"gameSessionName\"])),\n    ).subscribe(resp => {\n      this.updateFromCookieSession();\n      if (!this.sCurrGameSession.isGameSessionFree) {\n        this.router.navigate(['in-progress'], { relativeTo: this.route });\n      }\n    });\n\n    this.pollSubscription = interval(1000).pipe( // Polling for updates\n      shareReplay(),\n      switchMap(() => this.gsService.getSessionAt(this.sCurrGameSession.name)),\n      tap(resp => this.updateFromCookieSession()),\n      filter(resp => this.sCurrGameSession.users.length === 2),\n      take(1)\n      ).subscribe((resp) => {\n        this.updateFromCookieSession();\n        this.checkStartCountdown();\n        return resp;\n    });\n  }\n\n  checkStartCountdown() {\n    if (!this.sCurrGameSession.isGameSessionFree && !this.countdownStarted) { // i.e. game session just locked\n      // TODO: maybe here we can stop the gs update polling?\n      console.log(\"COUNTDOWN STARTED!\");\n      const waitTime = (this.sCurrGameSession.startCountdownTime + 3000) - (new Date()).getTime();\n      console.log(\"Time to wait\", waitTime+\"ms\");\n      this.countdownStarted = true;\n      var s = interval(100).subscribe(e => {\n        this.countdownTimerTimeLeft = (waitTime/1000) - (e/10); // UI\n      });\n      var timerSubs = timer(waitTime).subscribe(\n        e => {\n          s.unsubscribe();\n          timerSubs.unsubscribe();\n          this.isGameView = true; // Starts the game\n      });\n    }\n  }\n\n  updateFromCookieSession() {\n    var this_user = JSON.parse(atob(this.cookieService.get(\"user\")));\n    this.sCurrUser = this_user[\"user\"];\n    this.sCurrGameSession = this_user[\"game_session\"];\n    this.sCurrUser$.next(this.sCurrUser);\n    this.sCurrGameSession$.next(this.sCurrGameSession);\n  }\n\n  setUsername(val: string) {\n    this.isAddUserDisabled = true;\n    this.addButtonText = \"Added!\"\n    this.userService.setUsername(val, this.sCurrGameSession.name).subscribe(resp => {\n      this.updateFromCookieSession();\n    });\n  }\n\n\n  /**\n   * @TEMPORARY\n   */\n  showCookieValue(cookieName: string) {\n    var this_user = JSON.parse(atob(this.cookieService.get(cookieName)));\n    console.log(this_user);\n  }\n\n  ngOnDestroy() {\n    this.routeSubscription.unsubscribe();\n    this.pollSubscription.unsubscribe();\n  }\n  \n}\n\n","module.exports = \"YOU'RE IN GAME!\\n<h1>Round: {{ round }}, {{ quesAnsString }}</h1>\\n<h1>{{ this.isShowingAnswers ? \\\"ANSWER\\\" : \\\"QUESTION\\\"}}</h1>\\n<h1>{{ currQuestion ? currQuestion.answerer : \\\"\\\" }}</h1>\\n<h2>{{ currQuestion ? currQuestion.question.questionText : \\\"\\\" }}</h2>\\n<div *ngIf=\\\"currQuestion\\\">\\n  <div *ngFor=\\\"let option of currQuestion.question.options; index as i\\\">\\n      <input [(ngModel)]=\\\"currOptionSelected\\\"\\n            type=\\\"radio\\\"\\n            [value]=\\\"i\\\"\\n            (id)=\\\"i\\\"\\n            (click)=\\\"setAnswerAs(i)\\\"\\n            name=\\\"options\\\"\\n            [disabled]=\\\"isShowingAnswers\\\">\\n      <label (for)=\\\"i\\\">{{ currQuestion.question.options[i].optionText }}</label>\\n      {{ currOptionSelected }}\\n  </div>\\n</div>\\n<button *ngIf=\\\"isShowingAnswers\\\" (click)=\\\"onNext()\\\">next</button>\\n<button (click)=\\\"showCookieValue('user')\\\">COOKIE</button>\\n<button (click)=\\\"setStopTimerTrue()\\\">STOP</button>\\n<timer #gameTimer [time]=\\\"5000\\\" (onTimerFinished)=\\\"onTimerFinished($event)\\\" ></timer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ2FtZS1zZXNzaW9uL2NvbXBvbmVudHMvaW4tZ2FtZS9pbi1nYW1lLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, ViewChild, AfterViewInit } from \"@angular/core\";\nimport { GameSessionService } from \"src/app/services/game-session.service\";\nimport { switchMap, take, tap, filter, map } from \"rxjs/operators\";\nimport { timer, interval, Observable, of } from \"rxjs\";\nimport { TimerComponent } from \"src/app/modules/ui/timer/timer.component\";\nimport { UtilityService } from \"../../services/utility.service\";\nimport { CookieService } from 'ngx-cookie-service';\n\n\n\n\n@Component({\n  selector: \"in-game\",\n  templateUrl: \"in-game.component.html\",\n  styleUrls: [\"in-game.component.scss\"]\n})\n\nexport class InGameComponent implements AfterViewInit {\n\n  @ViewChild(\"gameTimer\")\n  private gameTimerComponent: TimerComponent;\n\n  private readonly QUESTION_VIEW_TIME: number = 45000;\n  private readonly QUESTION_TIMER_TYPE: string = \"question_timer\";\n  private readonly ANSWER_VIEW_TIME: number = 45000;\n  private readonly ANSWER_TIMER_TYPE: string = \"answer_timer\";\n  private currTimerType: string;\n  private readonly TOTAL_ROUNDS: number = 5;\n\n  private round: number;\n\n  private timerTimeLeft: number;\n\n  private buddyName: string;\n  private currQuestion; // FIXME: temp\n  private currOptionSelected: number;\n\n  // UI\n  private isShowingAnswers: boolean\n\n\n\n  ngOnInit() { this.isShowingAnswers = false; }\n  ngAfterViewInit() { this.startRound() }\n\n  constructor(\n    private cookieService: CookieService,\n    private gsService: GameSessionService,\n    private utilityService: UtilityService\n  ) {\n    this.isShowingAnswers = false;\n    this.setBuddyNameFromCookie();\n    this.round = 0;\n    this.currOptionSelected = 1;\n  }\n\n  setAnswerAs(i) {\n    this.currOptionSelected = i;\n    if (!this.isShowingAnswers) this.onNext();\n  }\n\n  startRound() {\n    this.gsService.getQuestion()\n    .pipe(\n      filter(resp => resp.body.message === \"success\"),\n      take(1)\n    ).subscribe(resp => {\n        this.isShowingAnswers = false;\n        this.round++;\n        this.currQuestion = this.getQuestionFromCookie(true);\n        this.currTimerType = this.QUESTION_TIMER_TYPE;\n        this.startTimer(this.QUESTION_VIEW_TIME, this.currTimerType);\n    });\n  }\n\n  getQuestionFromCookie(amIAnswerer: boolean): object {\n    const c = JSON.parse(atob(this.cookieService.get(\"user\")));\n    console.log(this.round);\n    console.log(c);\n    const currUser = c.user;\n    const question = c.game_session.questions.filter(\n      el => (amIAnswerer && !el.isAnswered) ? (el.answerer === c.user.username) :\n                          el.answerer !== c.user.username)[0];\n    console.log(question);\n    try {\n      question.question.questionText = question.question.questionText.replace('{USER}',\n        amIAnswerer ? this.buddyName : currUser.username);\n    } catch (e) {\n      console.log({\n        round: this.round,\n        qORa: amIAnswerer ? \"question\" : \"answer\",\n        question: question\n      })\n      console.log(e);\n    }\n    return question;\n  }\n\n  onTimerFinished(timerType: string) {\n    if (timerType === this.QUESTION_TIMER_TYPE) {\n      this.onQuestionTimerFinished();\n      return;\n    }\n    this.onAnswerTimerFinished();\n  }\n\n  onNext() {\n    this.gameTimerComponent.stopTimer();\n    this.onTimerFinished(this.currTimerType);\n  }\n\n  onQuestionTimerFinished() {\n    const s = this.gsService.postMyAnswer(this.currOptionSelected)\n      .subscribe(resp => {\n        s.unsubscribe();\n        this.pollForBuddyAnswer();\n      });\n  }\n\n  onAnswerReceived(resp) {\n    this.isShowingAnswers = true;\n    const ques: any = this.getQuestionFromCookie(false);\n    this.setAnswerAs(ques.answer);\n    this.currQuestion = ques;\n    this.currTimerType = this.ANSWER_TIMER_TYPE;\n    this.startTimer(this.ANSWER_VIEW_TIME, this.ANSWER_TIMER_TYPE);\n  }\n\n  onAnswerTimerFinished() {\n    if (this.round === this.TOTAL_ROUNDS) { // TODO: change to 10 rounds\n      alert(\"Game over!\");\n      return;\n    }\n    this.startRound();\n  }\n\n  pollForBuddyAnswer() {\n    // TODO: maybe we can start a UI loading circle here or something?\n    const my_s = this.utilityService.getPoller(\n      2000,\n      (e) => this.gsService.getBuddyAnswer(),\n      (resp) => {\n        const question: any = this.getQuestionFromCookie(false);\n        return question && question.isAnswered;\n      }\n    ).subscribe(resp => {\n      my_s.unsubscribe();\n      this.onAnswerReceived(resp);\n    });\n  }\n\n  startTimer(time: number, timerType: string) {\n    this.gameTimerComponent.setTime(time);\n    this.gameTimerComponent.setTimerType(timerType);\n    this.gameTimerComponent.startTimer();\n  }\n\n  setBuddyNameFromCookie() {\n    const c = JSON.parse(atob(this.cookieService.get(\"user\")));\n    this.buddyName = c.game_session.users.filter(el => el !== c.user.username)[0];\n  }\n\n  /**\n   * @TEMPORARY\n   */\n  showCookieValue(cookieName: string) {\n    var this_user = JSON.parse(atob(this.cookieService.get(cookieName)));\n    console.log(this_user);\n  }\n\n  ngOnDestroy() {\n    // TODO: destroy all subscribers\n  }\n\n}\n","module.exports = \"Game is currently in progress. :)\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZ2FtZS1zZXNzaW9uL2NvbXBvbmVudHMvaW4tcHJvZ3Jlc3MvaW4tcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component } from \"@angular/core\";\n\n\n\n@Component({\n  selector: \"in-progress\",\n  templateUrl: \"in-progress.component.html\",\n  styleUrls: [ \"in-progress.component.scss\" ]\n})\n\nexport class InProgressComponent {\n\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { GameSessionComponent } from \"./components/game-session/game-session.component\";\nimport { InProgressComponent } from './components/in-progress/in-progress.component';\n\nconst routes: Routes = [\n  { path: ':gameSessionName', component: GameSessionComponent },\n  { path: ':gameSessionName/in-progress', component: InProgressComponent }\n];\n\nexport const gameSessionRouting = RouterModule.forChild(routes);\n","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from '@angular/forms';\nimport { GameSessionComponent } from \"./components/game-session/game-session.component\";\nimport { InProgressComponent } from \"./components/in-progress/in-progress.component\";\nimport { gameSessionRouting } from \"./game-session-routing.module\";\nimport { UiModule } from \"../ui/ui.module\";\nimport { CommonModule } from \"@angular/common\";\nimport { UserService } from \"./services/user.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { InGameComponent } from \"./components/in-game/in-game.component\";\nimport { UtilityService } from \"./services/utility.service\";\n\n@NgModule({\n  declarations: [\n    GameSessionComponent,\n    InGameComponent,\n    InProgressComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    gameSessionRouting,\n    HttpClientModule,\n    UiModule\n  ],\n  providers: [ UserService, UtilityService ]\n})\n\nexport class GameSessionModule { }\n\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\n\n\n\n@Injectable()\nexport class UserService {\n  constructor(private httpClient: HttpClient) {\n\n  }\n\n  setUsername(username: string, gameSession: string) {\n    // FIXME: fix getting empty gameSession string\n    var mkUserObs = this.httpClient.post(`http://localhost:9000/game-sessions/${gameSession}/add-user`, {\n      username: username\n    }, {\n      observe: 'response',\n      withCredentials: true // Required for CORS\n    });\n    return mkUserObs;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable, timer } from \"rxjs\";\nimport { switchMap, filter, take } from \"rxjs/operators\";\n\n\n\n\n\n\n\n\n@Injectable()\nexport class UtilityService {\n  \n  getPoller(intervalTime: number,\n    pollFct: (intervalEmit: number) => Observable<any>,\n    pollUntil: (resp) => boolean): Observable<any> {\n    return timer(0, intervalTime).pipe(\n              switchMap(pollFct), // TODO switchMap might cancel requests look at others\n              filter(pollUntil),\n              take(1)\n          );\n  }\n}\n\n"],"sourceRoot":""}