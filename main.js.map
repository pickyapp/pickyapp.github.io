{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/app/app.component.html","webpack:///./src/app/components/app/app.component.scss","webpack:///./src/app/components/app/app.component.ts","webpack:///./src/app/services/game-session.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAuD;AAEvD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,8DAA8D,EAAE;IAC1F,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,8DAA8D,EAAE;CAC5F,CAAC;AAEK,IAAM,WAAW,GAAG,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNE;AACjB;AACe;AACM;AACjB;AACM;AACkB;AAClB;AAenD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,0EAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,+DAAW;aACZ;YACD,SAAS,EAAE,CAAE,iFAAkB,EAAE,gEAAa,CAAE;YAChD,SAAS,EAAE,CAAC,0EAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvBtB,oD;;;;;;;;;;;ACAA,mCAAmC,wBAAwB,mBAAmB,EAAE,+CAA+C,mZ;;;;;;;;;;;;;;;;;;;;;;;;ACArF;AAQ1C;IAGE;QAFA,UAAK,GAAG,YAAY,CAAC;IAIrB,CAAC;IALU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,wGAAmC;;SAEpC,CAAC;;OACW,YAAY,CAMxB;IAAD,mBAAC;CAAA;AANwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACRkB;AACO;AAIlD;IASE,4BACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QART,YAAO,GAAG,qBAAqB,CAAC;QAEzC,gBAAW,GAAW;YAC5B,OAAO,EAAE,UAAU;YACnB,eAAe,EAAE,IAAI,CAAC,oBAAoB;SAC3C,CAAC;IAIC,CAAC;IAEJ,yCAAY,GAAZ,UAAa,eAAuB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,uBAAkB,eAAiB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7F,CAAC;IAED,wCAAW,GAAX,UAAY,eAAuB;QACjC,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,OAAO,4BAAuB,eAAiB,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9G,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,wCAAW,GAAX;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,sBAAmB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7E,CAAC;IAED,yCAAY,GAAZ,UAAa,CAAS;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,OAAO,sBAAmB,EAAE;YACxD,WAAW,EAAE,CAAC;SACf,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACvB,CAAC;IAED,2CAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,sBAAmB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7E,CAAC;IAlCU,kBAAkB;QAD9B,gEAAU,EAAE;yCAWK,+DAAU;OAVf,kBAAkB,CAmC9B;IAAD,yBAAC;CAAA;AAnC8B;;;;;;;;;;;;;ACL/B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./modules/game-session/game-session.module\": [\n\t\t\"./src/app/modules/game-session/game-session.module.ts\",\n\t\t\"default~modules-game-session-game-session-module~modules-landing-page-landing-page-module\",\n\t\t\"modules-game-session-game-session-module\"\n\t],\n\t\"./modules/landing-page/landing-page.module\": [\n\t\t\"./src/app/modules/landing-page/landing-page.module.ts\",\n\t\t\"default~modules-game-session-game-session-module~modules-landing-page-landing-page-module\",\n\t\t\"modules-landing-page-landing-page-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', loadChildren: './modules/landing-page/landing-page.module#LandingPageModule' },\n  { path: 'g', loadChildren: './modules/game-session/game-session.module#GameSessionModule' }\n];\n\nexport const RootRouting = RouterModule.forRoot(routes);\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppComponent } from './components/app/app.component';\nimport { FormsModule } from '@angular/forms';\nimport { RootRouting } from './app-routing.module';\nimport { GameSessionService } from './services/game-session.service';\nimport { CookieService } from \"ngx-cookie-service\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RootRouting\n  ],\n  providers: [ GameSessionService, CookieService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \".base-component {\\n  background: #52c7b8;\\n  height: 1000px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3Zpbml0L3NpZGUvcGlja3ktbXZwMS9zcmMvYXBwL2NvbXBvbmVudHMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLG9CQUFtQjtFQUNuQixlQUFjLEVBQ2YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLmJhc2UtY29tcG9uZW50IHtcbiAgYmFja2dyb3VuZDogIzUyYzdiODtcbiAgaGVpZ2h0OiAxMDAwcHg7XG59Il19 */\"","import { Component } from '@angular/core';\nimport { AppState } from 'src/app/types/app-state/app-state.interface';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'picky-mvp2';\n\n  constructor() {\n    \n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class GameSessionService {\n\n  private readonly hostUrl = 'https://api.piky.me';\n\n  private httpOptions: object = {\n    observe: 'response',\n    withCredentials: true // Required for CORS\n  };\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  getSessionAt(gameSessionName: string): Observable<any> { // TODO: change from any\n    return this.http.get(`${this.hostUrl}/game-sessions/${gameSessionName}`, this.httpOptions);\n  }\n\n  makeSession(gameSessionName: string): Observable<any> {\n    var mkSessReq = this.http.post(`${this.hostUrl}/game-sessions/make/${gameSessionName}`, {}, this.httpOptions);\n    return mkSessReq;\n  }\n\n  getQuestion(): Observable<any> {\n    return this.http.get(`${this.hostUrl}/questions/random`, this.httpOptions);\n  }\n\n  postMyAnswer(i: number): Observable<any> {\n    return this.http.post(`${this.hostUrl}/questions/answer`, {\n      answerIndex: i\n    }, this.httpOptions);\n  }\n\n  getBuddyAnswer(): Observable<any> {\n    return this.http.get(`${this.hostUrl}/questions/answer`, this.httpOptions);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}